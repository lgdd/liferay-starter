FROM azul/zulu-openjdk-alpine:11 AS builder

RUN apk add --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/ --no-cache \
    nodejs \
    npm \
    && mkdir workspace \
    && chown 1001 workspace \
    && chmod "g+rwX" workspace \
    && chown 1001:root workspace

WORKDIR /workspace

COPY pom.xml .
COPY mvnw .
COPY .mvn .mvn

RUN ./mvnw dependency:copy-dependencies

COPY src src

RUN ./mvnw package

FROM azul/zulu-openjdk-alpine:11

ENV DEPLOYMENTS=/deployments
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global
ENV PATH=$PATH:/home/node/.npm-global/bin
ENV PATH=$PATH:/home/node/.npm-global/lib
ENV NODE_ENV=production

ARG RUN_JAVA_VERSION=1.3.5

RUN addgroup -g 1000 node \
    && adduser -u 1000 -G node -s /bin/sh -D node \
    && apk add --no-cache \
    curl \
    nodejs \
    npm \
    && mkdir /deployments \
    && chown node $DEPLOYMENTS \
    && chmod "g+rwX" $DEPLOYMENTS \
    && chown node:root $DEPLOYMENTS \
    && curl -sSL https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o $DEPLOYMENTS/run-java.sh \
    && chown node $DEPLOYMENTS/run-java.sh \
    && chmod 540 $DEPLOYMENTS/run-java.sh

USER node

WORKDIR /home/node/
RUN curl -sSL https://raw.githubusercontent.com/liferay/liferay-blade-cli/master/cli/installers/local | sh
ENV PATH "$PATH:/home/node/jpm/bin"
RUN blade update && \
    blade version

RUN npm i -g yarn \
    && yarn global add yo

RUN yarn global add generator-old-liferay-theme@npm:generator-liferay-theme@^8.0.0 \
    && yarn global add generator-liferay-theme \
    && yarn global add generator-liferay-js

COPY --from=builder "/workspace/target/lib/*" "$DEPLOYMENTS/lib/"
COPY --from=builder "/workspace/target/*-runner.jar" "$DEPLOYMENTS/app.jar"

EXPOSE 8080

ENTRYPOINT [ "/deployments/run-java.sh" ]
